strategy:
  matrix:
    linux:
      imageName: 'ubuntu-16.04'
      rid: "linux-x64"
      PLATFORMLINKER: "clang-6.0"
    mac:
      imageName: 'macos-10.13'
      rid: "osx-x64"
      PLATFORMLINKER: ""
    windows:
      imageName: 'vs2017-win2016'
      rid: "win-x64"
      PLATFORMLINKER: ""
variable:
  - name: CppCompilerAndLinker
    value: "$(PLATFORMLINKER)"
pool:
  vmImage: $(imageName)

steps:
  - task: DotNetCoreCLI@2
    name: "restore_solution"
    inputs:
      command: 'restore'
      projects: "dotnet-encoding.sln"
  - task: DotNetCoreCLI@2
    name: "build_solution"
    inputs:
      command: "build"
      configuration: "release"
      projects: "dotnet-encoding.sln"
  - task: DotNetCoreCLI@2
    name: "test_solution"
    inputs:
      command: "test"
      configuration: "Release"
      projects: "dotnet-encoding.sln"
  - task: DotNetCoreCLI@2
    name: "pack_solution"
    inputs:
      command: "pack"
      configuration: "release"
      packagesToPack: "dotnet-text-encoder/dotnet-text-encoder.csproj"
  - task: DotNetCoreCLI@2
    name: "publish_project"
    inputs:
      command: "custom"
      custom: "publish"
      arguments: "-c Release -p:WithCoreRT=true -p:RuntimeIdentifier=$(rid) -p:PackAsTool=false"
      projects: "dotnet-text-encoder/dotnet-text-encoder.csproj"
      publishWebProjects: false
  - task: CopyFiles@2
    name: "copying_native_file"
    inputs:
      sourceFolder: "dotnet-text-encoder/bin/Release"
      contents: "**/native/*"
  - task: CopyFiles@2
    name: "copying_nupkg"
    inputs:
      sourceFolder: "dotnet-text-encoder/bin/Release"
      contents: "**/*.nupkg"
  - task: PublishBuildArtifacts@1
    name: "publishing_artifacts"
    inputs:
      pathToPublish: "$(Build.ArtifactStagingDirectory)"
      artifactName: "dotnet-tenc-$(rid)"
